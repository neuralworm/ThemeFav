{
	"name": "ThemeFav",
	"displayName": "ThemeFav: Theme Manager",
	"description": "Easily favorite themes and switch between them. Edit, create, save.",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.84.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:themeFav.favoritethememessage"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "themeFav.getFavorites",
				"title": "ThemeFav: Get favorite themes."
			},
			{
				"command": "themeFav.saveTheme",
				"title": "ThemeFav: Add Current",
				"icon": "$(add)"
			},
			{
				"command": "themeFav.selectFromFavorites",
				"title": "ThemeFav: Select"
			},
			{
				"command": "themeFav.removeViaCommandPalette",
				"title": "ThemeFav: Remove",
				"icon": "$(remove)"
			},
			{
				"command": "themeFav.removeViaView",
				"title": "Remove",
				"icon": "$(remove)"
			},
			{
				"command": "themeFav.refreshTreeView",
				"title": "ThemeFav: Refresh"
			},
			{
				"command": "themeFav.sortAlphaAsc",
				"title": "Sort Alphabetically (Asc)",
				"icon": "$(arrow-up)"
			},
			{
				"command": "themeFav.sortAlphaDesc",
				"title": "Sort Alphabetically (Desc)",
				"icon": "$(arrow-down)"
			},
			{
				"command": "themeFav.manage",
				"title": "ThemeFav: Manage"
			},
			{
				"command": "themeFav.listExt",
				"title": "THEMEFAV TEST: List Ext"
			},
			{
				"command": "themeFav.TEST_RESET",
				"title": "THEMEFAV TEST: RESET"
			},
			{
				"command": "themeFav.validate",
				"title": "ThemeFav: Validate Themes",
				"icon": "$(refresh)"
			},
			{
				"command": "themeFav.newFolder",
				"title": "ThemeFav: New Folder",
				"icon": "$(new-folder)"
			},
			{
				"command": "themeFav.moveToNewFolder",
				"title": "New Group"
			},
			{
				"command": "themeFav.moveToFolder",
				"title": "Group (Pick)"
			},
			{
				"command": "themeFav.moveToDefault",
				"title": "Uncategorized"
			},
			{
				"command": "themeFav.editJSON",
				"title": "Edit JSON",
				"icon": "$(edit)"
			},
			{
				"command": "themeFav.delete",
				"title": "Delete"
			},
			{
				"command": "themeFav.renameFolder",
				"title": "Rename"
			},
			{
				"command": "themeFav.copyPath",
				"title": "Copy Path"
			},
			{
				"command": "themeFav.addTo",
				"title": "Add to"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "theme-favorites",
					"title": "ThemeFav",
					"icon": "./resources/themefav.svg"
				}
			]
		},
		"views": {
			"theme-favorites": [
				{
					"id": "favtreeview",
					"name": "Favorites"
				},
				{
					"id": "mashuptreeview",
					"name": "Mashups"
				},
				{
					"id": "historytreeview",
					"name": "History"
				},
				{
					"id": "installedtreeview",
					"name": "Installed"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "themeFav.saveTheme",
					"when": "view == favtreeview",
					"group": "navigation@1"
				},
				{
					"command": "themeFav.removeViaCommandPalette",
					"when": "view == favtreeview",
					"group": "@1"
				},
				{
					"command": "themeFav.newFolder",
					"when": "view == favtreeview",
					"group": "navigation@2"
				},
				{
					"command": "themeFav.sortAlphaAsc",
					"when": "view == favtreeview",
					"group": "@2"
				},
				{
					"command": "themeFav.sortAlphaDesc",
					"when": "view == favtreeview",
					"group": "@2"
				},
				{
					"command": "themeFav.validate",
					"when": "view == favtreeview",
					"group": "navigation@3"
				},
				{
					"command": "themeFav.validate",
					"when": "view == installedtreeview",
					"group": "navigation@1"
				}
			],
			"view/item/context": [
				{
					"submenu": "themeFav.moveToFolderSubMenu",
					"when": "view == favtreeview && viewItem == themeItem",
					"group": "edit"
				},
				{
					"command": "themeFav.renameFolder",
					"when": "view == favtreeview && viewItem == folder",
					"group": "edit"
				},

				{
					"command": "themeFav.editJSON",
					"when": "view == favtreeview && viewItem != folder",
					"group": "paths"
				},
				{
					"command": "themeFav.delete",
					"when": "view == favtreeview && viewItem != installedFolder && viewItem !== installed",
					"group": "delete"
				},
				{
					"command": "themeFav.copyPath",
					"when": "view == favtreeview && (viewItem == installed || viewItem == themeItem)",
					"group": "copy"
				},
				{
					"command": "themeFav.addTo",
					"when": "view == installedtreeview"
				}
				
			],
			"commandPalette": [
				{
					"command": "themeFav.sortAlphaAsc",
					"when": "false"
				},
				{
					"command": "themeFav.sortAlphaDesc",
					"when": "false"
				},
				{
					"command": "themeFav.removeViaView",
					"when": "false"
				},
				{
					"command": "themeFav.delete",
					"when": "false"
				},
				{
					"command": "themeFav.renameFolder",
					"when": "false"
				}
			],
			"themeFav.moveToFolderSubMenu": [
				{
					"command": "themeFav.moveToNewFolder"
				},
				{
					"command": "themeFav.moveToFolder"
				},
				{
					"command": "themeFav.moveToDefault"
				}
			]
		},
		"submenus": [
			{
				"id": "themeFav.moveToFolderSubMenu",
				"label": "Move"
			}
		],
		"configuration": {
			"title": "ThemeFav",
			"properties": {
				"themeFav.showAllThemesInMenu": {
					"type": "boolean",
					"default": "true",
					"description": "Determines if side action menu displays list of all installed themes in addition to favorites list."
				},
				"themeFav.validateThemesOnLaunch": {
					"type": "boolean",
					"default": "false",
					"description": "Check favorites to ensure if still installed upon startup, and purge from favorites if missing."
				},
				"themeFav.historyLength": {
					"type": "integer",
					"default": "20",
					"description": "Length of history of last activated themes.",
					"minimum": 0,
					"maximum": 40
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "yarn run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "yarn run compile && yarn run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.84.0",
		"@typescript-eslint/eslint-plugin": "^5.30.0",
		"@typescript-eslint/parser": "^5.30.0",
		"@vscode/test-electron": "^2.1.5",
		"eslint": "^8.18.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"typescript": "^4.7.4"
	},
	"dependencies": {
		"@types/uuid": "^9.0.7",
		"uuid": "^9.0.1"
	}
}
